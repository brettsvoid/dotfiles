# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

source "$CONFIG_DIR/colors.sh" # Loads all defined colors
source "$CONFIG_DIR/icons.sh"  # Loads all defined icons

ITEM_DIR="$CONFIG_DIR/items"     # Directory where the items are configured
PLUGIN_DIR="$CONFIG_DIR/plugins" # Directory where all the plugin scripts are stored

# Needs to have Regular, Bold, Semibold, Heavy and Black variants
FONT="FiraCode Nerd Font"

PADDING=4

# Setting up and starting the helper process
HELPER=git.felix.helper
killall helper
(cd $CONFIG_DIR/helper && make)
$CONFIG_DIR/helper/helper $HELPER >/dev/null 2>&1 &

# Unload the macOS on screen indicator overlay for volume change
#launchctl unload -F /System/Library/LaunchAgents/com.apple.OSDUIHelper.plist >/dev/null 2>&1 &

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

# Setting up the general bar appearance of the bar
bar=(
  height=40
  color=$BAR_COLOR
  blur_radius=30
  #border_width=2
  border_color=$BAR_BORDER_COLOR
  #shadow=off
  #position=top
  #sticky=on
  padding_right=8
  padding_left=8
  y_offset=0
  margin=0
  #topmost=window
)

sketchybar --bar "${bar[@]}"

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  background.height=26
  background.corner_radius=9
  background.border_width=2

  icon.font="$FONT:Bold:15.0"
  icon.color=$ICON_COLOR
  icon.padding_left=$PADDING
  icon.padding_right=$PADDING

  label.font="$FONT:Bold:14.0"
  label.color=$LABEL_COLOR
  label.padding_left=$PADDING
  label.padding_right=$PADDING

  padding_left=$PADDING
  padding_right=$PADDING

  popup.background.border_width=1
  popup.background.corner_radius=8
  popup.background.border_color=$POPUP_BORDER_COLOR
  popup.background.color=$POPUP_BACKGROUND_COLOR
  popup.background.shadow.drawing=on
  popup.blur_radius=30

  scroll_texts=on
  updates=when_shown
)
sketchybar --default "${default[@]}"


##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

# SPACE_ICONS=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10")
# for i in "${!SPACE_ICONS[@]}"
# do
#   sid="$(($i+1))"
#   space=(
#     space="$sid"
#     icon="${SPACE_ICONS[i]}"
#     icon.padding_left=7
#     icon.padding_right=7
#     background.color=0x40ffffff
#     background.corner_radius=5
#     background.height=25
#     label.drawing=off
#     script="$PLUGIN_DIR/space.sh"
#     click_script="yabai -m space --focus $sid"
#   )
#   sketchybar --add space space."$sid" left --set space."$sid" "${space[@]}"
# done

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

source "$ITEM_DIR/apple.sh"

# sketchybar --add item chevron left \
#            --set chevron icon= label.drawing=off
# sketchybar --add item front_app left \
#            --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
#            --subscribe front_app front_app_switched
source "$ITEM_DIR/front_app.sh"

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

source "$ITEM_DIR/time.sh"
source "$ITEM_DIR/date.sh"

# Runs "brew outdated" command and shows you amount of outdated packages
# Will install an old package so you can see the number increase
# `brew install ~/Downloads/wezterm.rb`
# `https://github.com/wez/wezterm/releases`
# `brew update && brew upgrade` updates the package and clears the counter
# -----> Make sure to add the section to the .zshrc file, so that package count is
# updated automatically after running brew commands
# `https://github.com/linkarzu/dotfiles-latest/blob/8fd9af824fc1db73de185b3733dac5d8514f9fb0/zshrc/zshrc-file.sh#L225-L247`
source "$ITEM_DIR/brew.sh"


# sketchybar --add item clock right \
#            --set clock update_freq=10 icon=  script="$PLUGIN_DIR/clock.sh" \
#            --add item volume right \
#            --set volume script="$PLUGIN_DIR/volume.sh" \
#            --subscribe volume volume_change \
#            --add item battery right \
#            --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" \
#            --subscribe battery system_woke power_source_change
#
source "$ITEM_DIR/volume.sh"
source "$ITEM_DIR/battery.sh"
source "$ITEM_DIR/disk_space.sh"

# CPU usage indicator
source "$ITEM_DIR/cpu.sh"

# source "$ITEM_DIR/timer.sh"

sketchybar --hotload on

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update

echo "sketchybar configuation loaded..."
